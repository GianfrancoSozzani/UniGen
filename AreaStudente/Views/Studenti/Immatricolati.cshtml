@using System.Globalization
@model AreaStudente.Models.ModificaStudenteViewModel

<div class="main-content">
	<div class="container-fluid">
		<form class="row" method="post" id="modifica-form" enctype="multipart/form-data">
			<input type="hidden" asp-for="K_Studente" />

			<!-- CARD IMMAGINE PROFILO: SOPRA su mobile/tablet, A DESTRA su XL -->
			<div class="col-12 col-md-12 col-xl-4 order-1 order-xl-2 px-0 px-lg-2 mt--7">
				<div class="card shadow">
					<div class="card-body">
						@{
							bool hasImage = Model?.ImmagineProfilo != null && Model.ImmagineProfilo.Length > 0;
							string imgSrc = null;
							if (hasImage)
							{
								var base64 = Convert.ToBase64String(Model.ImmagineProfilo);
								imgSrc = $"data:image/jpeg;base64,{base64}";
							}
						}
						<div id="img-container" class="position-absolute top-0 start-50 translate-middle mb-5 d-flex justify-content-center align-items-center"
							 style="width: 100px; height: 100px; border-radius: 50%; overflow: hidden; background-color: #f0f0f0; font-size: 4rem;">
							@if (hasImage)
							{
								<img src="@imgSrc" alt="Immagine Profilo" style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%;" />
							}
							else
							{
								<i class="bi bi-person-circle rounded img-icon text-black bg-white" style="display: flex; justify-content: center; align-items: center; width: 100%; height: 100%; font-size: 6rem; border-radius: 50%;"></i>
							}
						</div>
						<h4 class="text-center mt-5">@(Model?.Nome ?? "Studente") @(Model?.Cognome ?? "Cognome")</h4>
						<p class="text-center">@Model?.Email</p>
						<hr class="my-4">
					</div>
				</div>
			</div>

			<!-- CARD FORM PRINCIPALE: SOTTO su mobile/tablet, A SINISTRA su XL -->
			<div class="col-12 col-md-12 col-xl-8 order-2 order-xl-1 mt--7">
				<div class="card shadow">
					<div class="card-body">
						<h3 class="text-center mb-2">Procedura di Immatricolazione</h3>
						@if (!ViewData.ModelState.IsValid)
						{
							<div class="alert alert-danger text-center" role="alert">
								@foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
								{
									<div>@error.ErrorMessage</div>
								}
							</div>
						}
						<p class="text-black px-1">
							In quest’area personale puoi scegliere la facoltà di tuo interesse, selezionare il corso di laurea e completare il primo pagamento per l’immatricolazione.
							Ti ricordiamo che, una volta confermate, le scelte relative alla facoltà e al corso non potranno essere modificate senza una nuova procedura di iscrizione.
						</p>

						<h4 class="heading-small text-muted">SELEZIONA UNA FACOLTÀ</h4>
						<div class="row mb-0 mb-lg-3 align-items-end">
							<div class="col-12 col-lg-9 mb-2 mb-lg-0">
								<select asp-for="K_Facolta" asp-items="Model.FacoltaList" class="form-control" id="facolta-select">
									<option disabled selected required>-- Selezionare una Facoltà --</option>
								</select>
							</div>
						</div>

						<hr class="my-4">
						<h4 class="heading-small text-muted">SELEZIONA UN CORSO</h4>
						<div class="row mb-0 mb-lg-3 align-items-end">
							<div class="col-12 col-lg-9 mb-2 mb-lg-0">
								<select asp-for="K_Corso" asp-items="Model.CorsiList" class="form-control" id="corso-select">
									<option disabled selected required>-- Selezionare un Corso --</option>
								</select>
							</div>
						</div>

						<hr class="my-4">
						<h4 class="heading-small text-muted">Dati Anagrafici</h4>
						<div class="row mb-0 mb-lg-3">
							<div class="col-12 col-lg-4 mb-2 mb-lg-0">
								<label class="form-label form-control-label">Cognome</label>
								<input type="text" asp-for="Cognome" class="form-control form-control-alternative" required />
								<span asp-validation-for="Cognome" class="text-danger"></span>
							</div>
							<div class="col-12 col-lg-4 mb-2">
								<label class="form-label form-control-label">Nome</label>
								<input type="text" asp-for="Nome" class="form-control form-control-alternative" required />
								<span asp-validation-for="Nome" class="text-danger"></span>
							</div>
							@{
								var oggi = DateTime.Today.ToString("yyyy-MM-dd");
								var oggi2 = DateTime.Now.Year.ToString("yyyy-MM-dd");
								var maxData = DateTime.Now.AddYears(-18).ToString("yyyy-MM-dd");
							}
							<div class="col-12 col-lg-4 mb-2">
								<label class="form-label form-control-label">Data di Nascita</label>
								<input type="date" asp-for="DataNascita" class="form-control form-control-alternative" max="@maxData" required />
								<span asp-validation-for="DataNascita" class="text-danger"></span>
								<span asp-validation-for="DataNascita" class="text-danger"></span>
							</div>
						</div>

						<hr class="my-4">
						<h4 class="heading-small text-muted mt-0">Informazioni di contatto</h4>
						<div class="row mb-0 mb-lg-3">
							<div class="col-12 col-lg-9 mb-2 mb-lg-0">
								<label class="form-label form-control-label">Indirizzo</label>
								<input type="text" asp-for="Indirizzo" class="form-control form-control-alternative" required />
								<span asp-validation-for="Indirizzo" class="text-danger"></span>
							</div>
							<div class="col-12 col-lg-3 mb-2 mb-lg-0">
								<label class="form-label form-control-label">CAP</label> <input asp-for="CAP" class="form-control form-control-alternative" maxlength="5" required />
								<span asp-validation-for="CAP" class="text-danger"></span>
								<span asp-validation-for="CAP" class="text-danger"></span>

							</div>
						</div>

						<div class="row mb-0 mb-lg-3">
							<div class="col-12 col-lg-9 mb-2 mb-lg-0">
								<label class="form-label form-control-label">Città</label>
								<input type="text" asp-for="Citta" class="form-control form-control-alternative" required />
								<span asp-validation-for="Citta" class="text-danger"></span>
							</div>
							<div class="col-12 col-lg-3 mb-2 mb-lg-0">
								<label class="form-label form-control-label">Provincia</label>
								<input type="text" asp-for="Provincia" class="form-control text-uppercase form-control-alternative" maxlength="2" required />
								<span asp-validation-for="Provincia" class="text-danger"></span>
							</div>
						</div>

						@* <div class="text-center">
							<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#confermaModal">Procedi</button>
						</div> *@
						@if (Model.Matricola.HasValue == false && @Model.K_Corso.ToString() != "" && ViewData.ModelState.IsValid)
						{
							<div class="text-center">
								<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#confermaModal">Procedi</button>
							</div>
						}
						else
						{
							<div class="text-center">
								<button type="button" class="btn btn-primary" disabled>Procedi</button>
								<div class="text-center">
									<div class="text-danger mt-2">
										@if (Model.Matricola.HasValue)
										{
											<span>Risulti già immatricolato. Se desideri procedere con una nuova immatricolazione, è necessario presentare prima la rinuncia agli studi.</span>
										}
										else if (@Model.K_Corso.ToString() == "")
										{
											<span>Seleziona un corso per procedere.</span>
										}
										else if (!ViewData.ModelState.IsValid)
										{
											<span>Compila correttamente tutti i campi richiesti.</span>
										}
									</div>
								</div>
							</div>

						}
					</div>
				</div>
			</div>

			<!-- Modal Conferma -->
			<div class="modal fade" id="confermaModal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
				<div class="modal-dialog">
					<div class="modal-content">
						<div class="modal-header justify-content-center">
							<h5 class="modal-title text-center w-100" id="modalLabel">Conferma Iscrizione</h5>
							<button type="button" class="btn-close position-absolute end-0 me-3" data-bs-dismiss="modal" aria-label="Chiudi"></button>
						</div>
						<div class="modal-body text-center">
							Vuoi confermare l'immatricolazione?
							<p>L'importo è: €@Model.Importo</p>
							<div id="paypal-button-container" class="mt-3"></div>
						</div>
						<div class="modal-footer d-flex justify-content-between">
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annulla</button>
							<button type="button" class="btn btn-primary d-none" id="conferma-btn">Conferma</button>
						</div>
					</div>
				</div>
			</div>
		</form>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script src="https://www.paypal.com/sdk/js?client-id=Adbf7fTtUU3GWVxRgKRn4-68S8X52d2nyyh7pJ4eEKdNPXgP6GGlVP8Zuomr1OsJUoSWjYLRe23jgyaN&currency=EUR"></script>
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			const form = document.getElementById("modifica-form");
			const facoltaSelect = document.getElementById("facolta-select");
			const corsoSelect = document.getElementById("corso-select");
			const confermaBtn = document.getElementById("conferma-btn");

			facoltaSelect.addEventListener("change", function () {
				const input = document.createElement("input");
				input.type = "hidden";
				input.name = "updateFacolta";
				input.value = "true";
				form.appendChild(input);
				form.submit();
			});

			corsoSelect.addEventListener("change", function () {
				const input = document.createElement("input");
				input.type = "hidden";
				input.name = "updateFacolta";
				input.value = "true";
				form.appendChild(input);
				form.submit();
			});

			confermaBtn.addEventListener("click", function () {
				form.submit();
			});
		});

		paypal.Buttons({
			createOrder: function (data, actions) {
				return actions.order.create({
					purchase_units: [{
						amount: {
							value: '@Model.Importo?.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)'
						}
					}]
				});
			},
			onApprove: function (data, actions) {
				return actions.order.capture().then(function (details) {
					alert('Pagamento effettuato da: ' + details.payer.name.given_name);

					const form = document.getElementById("modifica-form");
					if (!form) {
						alert("Form non trovato!");
						return;
					}
					const formData = new FormData(form);
					formData.append("cod", "@Model.K_Studente");

					fetch("@Url.Action("Immatricolati", "Studenti")", {
						method: "POST",
						body: formData
					})
					.then(response => {
						if (!response.ok) throw new Error("Errore lato server");
						return response.text();
					})
					.then(result => {
						window.location.href = "@Url.Action("Show", "Studenti", new { cod = Model.K_Studente })";
					})
					.catch(error => {
						console.error("Errore durante l'immatricolazione:", error);
						alert("Errore durante l'immatricolazione.");
					});
				});
			},
			onCancel: function (data) {
				alert("Pagamento annullato.");
			},
			onError: function (err) {
				console.error("Errore PayPal:", err);
				alert("Errore durante il pagamento.");
			}
		}).render('#paypal-button-container');
	</script>
}
